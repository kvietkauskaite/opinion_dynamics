"""
This script simulates the opinion dynamics generated by using an ODE version of HK model.
A function HK_ode is called after defining the required parameters.
The results are plotted on a 'Timesteps vs Opinions' figure.
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib.pyplot import figure
import os
from functions.HK_ode import HK_ode


# PARAMETERS
#----------------------------------------
# the number of agents
n = 50

# the bound
R = 0.22

# the stopping criterion
stop = 10**(-5)

# the step size
h = 0.1

#----------------------------------------


# INITIAL CONDITIONS
#----------------------------------------
# OPTION 1: simulate the initial opinions
# x0 = np.random.uniform(0, 1, n)
# x0.sort()

# OPTION 2: use expected value distribution
x0 = [i/(n+1) for i in range(1, n+1)]
#----------------------------------------


# SIMULATION
#----------------------------------------
res = HK_ode (R, n, x0, h, stop, result = 'FULL', include_self = True)

# calculate the no of steps taken
steps = len(res)
#----------------------------------------

# PLOT THE RESULTS
#----------------------------------------
figure(figsize=(10, 8), dpi=80)

# define the colour map
colors = plt.cm.gist_rainbow(np.linspace(0, 1, n))

# plot each agent separately
for i in range(n):
    plt.plot(range(steps), res[:,i], color = colors[i])

plt.xlabel("Timesteps")
plt.ylabel("Opinions")
plt.title("Opinion Dynamics without Radicals")
plt.grid()
plt.show()
